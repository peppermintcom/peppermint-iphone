// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/label.proto

#import "GPBProtocolBuffers.h"

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30000
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum LabelDescriptor_ValueType

// Value types that can be used as label values.
typedef GPB_ENUM(LabelDescriptor_ValueType) {
  LabelDescriptor_ValueType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  // A variable-length string. This is the default.
  LabelDescriptor_ValueType_String = 0,

  // Boolean; true or false.
  LabelDescriptor_ValueType_Bool = 1,

  // A 64-bit signed integer.
  LabelDescriptor_ValueType_Int64 = 2,
};

GPBEnumDescriptor *LabelDescriptor_ValueType_EnumDescriptor(void);

BOOL LabelDescriptor_ValueType_IsValidValue(int32_t value);

#pragma mark - LabelRoot

@interface LabelRoot : GPBRootObject

// The base class provides:
//   + (GPBExtensionRegistry *)extensionRegistry;
// which is an GPBExtensionRegistry that includes all the extensions defined by
// this file and all files that it depends on.

@end

#pragma mark - LabelDescriptor

typedef GPB_ENUM(LabelDescriptor_FieldNumber) {
  LabelDescriptor_FieldNumber_Key = 1,
  LabelDescriptor_FieldNumber_ValueType = 2,
  LabelDescriptor_FieldNumber_Description_p = 3,
};

// A description of a label.
@interface LabelDescriptor : GPBMessage

// The label key.
@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

// The type of data that can be assigned to the label.
@property(nonatomic, readwrite) LabelDescriptor_ValueType valueType;

// A human-readable description for the label.
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@end

int32_t LabelDescriptor_ValueType_RawValue(LabelDescriptor *message);
void SetLabelDescriptor_ValueType_RawValue(LabelDescriptor *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

// @@protoc_insertion_point(global_scope)
