// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vision/v1/geometry.proto

#import "GPBProtocolBuffers.h"

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30000
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GeometryRoot

@interface GeometryRoot : GPBRootObject

// The base class provides:
//   + (GPBExtensionRegistry *)extensionRegistry;
// which is an GPBExtensionRegistry that includes all the extensions defined by
// this file and all files that it depends on.

@end

#pragma mark - Vertex

typedef GPB_ENUM(Vertex_FieldNumber) {
  Vertex_FieldNumber_X = 1,
  Vertex_FieldNumber_Y = 2,
};

// A vertex represents a 2D point in the image.
// NOTE: the vertex coordinates are in the same scale as the original image.
@interface Vertex : GPBMessage

// X coordinate.
@property(nonatomic, readwrite) int32_t x;

// Y coordinate.
@property(nonatomic, readwrite) int32_t y;

@end

#pragma mark - BoundingPoly

typedef GPB_ENUM(BoundingPoly_FieldNumber) {
  BoundingPoly_FieldNumber_VerticesArray = 1,
};

// A bounding polygon for the detected image annotation.
@interface BoundingPoly : GPBMessage

// The bounding polygon vertices.
// |verticesArray| contains |Vertex|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *verticesArray;
@property(nonatomic, readonly) NSUInteger verticesArray_Count;

@end

#pragma mark - Position

typedef GPB_ENUM(Position_FieldNumber) {
  Position_FieldNumber_X = 1,
  Position_FieldNumber_Y = 2,
  Position_FieldNumber_Z = 3,
};

// A 3D position in the image, used primarily for Face detection landmarks.
// A valid Position must have both x and y coordinates.
// The position coordinates are in the same scale as the original image.
@interface Position : GPBMessage

// X coordinate.
@property(nonatomic, readwrite) float x;

// Y coordinate.
@property(nonatomic, readwrite) float y;

// Z coordinate (or depth).
@property(nonatomic, readwrite) float z;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

// @@protoc_insertion_point(global_scope)
