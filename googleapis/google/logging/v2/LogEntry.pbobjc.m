// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/log_entry.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "google/logging/v2/LogEntry.pbobjc.h"
#import "google/api/Annotations.pbobjc.h"
#import "google/api/MonitoredResource.pbobjc.h"
#import "google/logging/type/HTTPRequest.pbobjc.h"
#import "google/logging/type/LogSeverity.pbobjc.h"
#import "google/protobuf/Any.pbobjc.h"
#import "google/protobuf/Struct.pbobjc.h"
#import "google/protobuf/Timestamp.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - LogEntryRoot

@implementation LogEntryRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[AnnotationsRoot extensionRegistry]];
    [registry addExtensions:[MonitoredResourceRoot extensionRegistry]];
    [registry addExtensions:[HTTPRequestRoot extensionRegistry]];
    [registry addExtensions:[LogSeverityRoot extensionRegistry]];
    [registry addExtensions:[GPBAnyRoot extensionRegistry]];
    [registry addExtensions:[GPBStructRoot extensionRegistry]];
    [registry addExtensions:[GPBTimestampRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - LogEntryRoot_FileDescriptor

static GPBFileDescriptor *LogEntryRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"google.logging.v2"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - LogEntry

@implementation LogEntry

@dynamic payloadOneOfCase;
@dynamic logName;
@dynamic hasResource, resource;
@dynamic protoPayload;
@dynamic textPayload;
@dynamic jsonPayload;
@dynamic hasTimestamp, timestamp;
@dynamic severity;
@dynamic insertId;
@dynamic hasHTTPRequest, hTTPRequest;
@dynamic labels, labels_Count;
@dynamic hasOperation, operation;

typedef struct LogEntry__storage_ {
  uint32_t _has_storage_[2];
  LogSeverity severity;
  GPBAny *protoPayload;
  NSString *textPayload;
  NSString *insertId;
  GPBStruct *jsonPayload;
  HttpRequest *hTTPRequest;
  MonitoredResource *resource;
  GPBTimestamp *timestamp;
  NSMutableDictionary *labels;
  NSString *logName;
  LogEntryOperation *operation;
} LogEntry__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageOneofDescription oneofs[] = {
      {
        .name = "payload",
        .index = -1,
      },
    };
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "protoPayload",
        .number = LogEntry_FieldNumber_ProtoPayload,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(LogEntry__storage_, protoPayload),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(GPBAny),
        .fieldOptions = NULL,
      },
      {
        .name = "textPayload",
        .number = LogEntry_FieldNumber_TextPayload,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(LogEntry__storage_, textPayload),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "insertId",
        .number = LogEntry_FieldNumber_InsertId,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(LogEntry__storage_, insertId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "jsonPayload",
        .number = LogEntry_FieldNumber_JsonPayload,
        .hasIndex = -1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(LogEntry__storage_, jsonPayload),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(GPBStruct),
        .fieldOptions = NULL,
      },
      {
        .name = "hTTPRequest",
        .number = LogEntry_FieldNumber_HTTPRequest,
        .hasIndex = 8,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(LogEntry__storage_, hTTPRequest),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(HttpRequest),
        .fieldOptions = NULL,
      },
      {
        .name = "resource",
        .number = LogEntry_FieldNumber_Resource,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(LogEntry__storage_, resource),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MonitoredResource),
        .fieldOptions = NULL,
      },
      {
        .name = "timestamp",
        .number = LogEntry_FieldNumber_Timestamp,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(LogEntry__storage_, timestamp),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(GPBTimestamp),
        .fieldOptions = NULL,
      },
      {
        .name = "severity",
        .number = LogEntry_FieldNumber_Severity,
        .hasIndex = 6,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(LogEntry__storage_, severity),
        .defaultValue.valueEnum = LogSeverity_Default,
        .dataTypeSpecific.enumDescFunc = LogSeverity_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "labels",
        .number = LogEntry_FieldNumber_Labels,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldMapKeyString,
        .dataType = GPBDataTypeString,
        .offset = offsetof(LogEntry__storage_, labels),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "logName",
        .number = LogEntry_FieldNumber_LogName,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(LogEntry__storage_, logName),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "operation",
        .number = LogEntry_FieldNumber_Operation,
        .hasIndex = 10,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(LogEntry__storage_, operation),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(LogEntryOperation),
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\007\001!!!\247\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[LogEntry class]
                                     rootClass:[LogEntryRoot class]
                                          file:LogEntryRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:oneofs
                                    oneofCount:sizeof(oneofs) / sizeof(GPBMessageOneofDescription)
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(LogEntry__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t LogEntry_Severity_RawValue(LogEntry *message) {
  GPBDescriptor *descriptor = [LogEntry descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:LogEntry_FieldNumber_Severity];
  return GPBGetMessageInt32Field(message, field);
}

void SetLogEntry_Severity_RawValue(LogEntry *message, int32_t value) {
  GPBDescriptor *descriptor = [LogEntry descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:LogEntry_FieldNumber_Severity];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

void LogEntry_ClearPayloadOneOfCase(LogEntry *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = descriptor->oneofs_[0];
  GPBMaybeClearOneof(message, oneof, 0);
}
#pragma mark - LogEntryOperation

@implementation LogEntryOperation

@dynamic id_p;
@dynamic producer;
@dynamic first;
@dynamic last;

typedef struct LogEntryOperation__storage_ {
  uint32_t _has_storage_[1];
  BOOL first;
  BOOL last;
  NSString *id_p;
  NSString *producer;
} LogEntryOperation__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = LogEntryOperation_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(LogEntryOperation__storage_, id_p),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "producer",
        .number = LogEntryOperation_FieldNumber_Producer,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(LogEntryOperation__storage_, producer),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "first",
        .number = LogEntryOperation_FieldNumber_First,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(LogEntryOperation__storage_, first),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "last",
        .number = LogEntryOperation_FieldNumber_Last,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(LogEntryOperation__storage_, last),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[LogEntryOperation class]
                                     rootClass:[LogEntryRoot class]
                                          file:LogEntryRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(LogEntryOperation__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
