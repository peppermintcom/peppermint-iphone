// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging.proto

#import "GPBProtocolBuffers.h"

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30000
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

CF_EXTERN_C_BEGIN

@class MonitoredResource;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - LoggingRoot

@interface LoggingRoot : GPBRootObject

// The base class provides:
//   + (GPBExtensionRegistry *)extensionRegistry;
// which is an GPBExtensionRegistry that includes all the extensions defined by
// this file and all files that it depends on.

@end

#pragma mark - DeleteLogRequest

typedef GPB_ENUM(DeleteLogRequest_FieldNumber) {
  DeleteLogRequest_FieldNumber_LogName = 1,
};

// The parameters to DeleteLog.
@interface DeleteLogRequest : GPBMessage

// Required. The resource name of the log to delete.  Example:
// `"projects/my-project/logs/syslog"`.
@property(nonatomic, readwrite, copy, null_resettable) NSString *logName;

@end

#pragma mark - WriteLogEntriesRequest

typedef GPB_ENUM(WriteLogEntriesRequest_FieldNumber) {
  WriteLogEntriesRequest_FieldNumber_LogName = 1,
  WriteLogEntriesRequest_FieldNumber_Resource = 2,
  WriteLogEntriesRequest_FieldNumber_Labels = 3,
  WriteLogEntriesRequest_FieldNumber_EntriesArray = 4,
};

// The parameters to WriteLogEntries.
@interface WriteLogEntriesRequest : GPBMessage

// Optional. A default log resource name for those log entries in `entries`
// that do not specify their own `logName`.  Example:
// `"projects/my-project/logs/syslog"`.  See
// [LogEntry][google.logging.v2.LogEntry].
@property(nonatomic, readwrite, copy, null_resettable) NSString *logName;

// Optional. A default monitored resource for those log entries in `entries`
// that do not specify their own `resource`.
@property(nonatomic, readwrite) BOOL hasResource;
@property(nonatomic, readwrite, strong, null_resettable) MonitoredResource *resource;

// Optional. User-defined `key:value` items that are added to
// the `labels` field of each log entry in `entries`, except when a log
// entry specifies its own `key:value` item with the same key.
// Example: `{ "size": "large", "color":"red" }`
// |labels| values are |NSString|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary *labels;
@property(nonatomic, readonly) NSUInteger labels_Count;

// Required. The log entries to write. The log entries must have values for
// all required fields.
// |entriesArray| contains |LogEntry|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *entriesArray;
@property(nonatomic, readonly) NSUInteger entriesArray_Count;

@end

#pragma mark - WriteLogEntriesResponse

// Result returned from WriteLogEntries.
@interface WriteLogEntriesResponse : GPBMessage

@end

#pragma mark - ListLogEntriesRequest

typedef GPB_ENUM(ListLogEntriesRequest_FieldNumber) {
  ListLogEntriesRequest_FieldNumber_ProjectIdsArray = 1,
  ListLogEntriesRequest_FieldNumber_Filter = 2,
  ListLogEntriesRequest_FieldNumber_OrderBy = 3,
  ListLogEntriesRequest_FieldNumber_PageSize = 4,
  ListLogEntriesRequest_FieldNumber_PageToken = 5,
};

// The parameters to `ListLogEntries`.
@interface ListLogEntriesRequest : GPBMessage

// Required. One or more project IDs or project numbers from which to retrieve
// log entries.  Examples of a project ID: `"my-project-1A"`, `"1234567890"`.
// |projectIdsArray| contains |NSString|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *projectIdsArray;
@property(nonatomic, readonly) NSUInteger projectIdsArray_Count;

// Optional. An [advanced logs filter](/logging/docs/view/advanced_filters).
// The filter is compared against all log entries in the projects specified by
// `projectIds`.  Only entries that match the filter are retrieved.  An empty
// filter matches all log entries.
@property(nonatomic, readwrite, copy, null_resettable) NSString *filter;

// Optional. How the results should be sorted.  Presently, the only permitted
// values are `"timestamp"` (default) and `"timestamp desc"`.  The first
// option returns entries in order of increasing values of
// `LogEntry.timestamp` (oldest first), and the second option returns entries
// in order of decreasing timestamps (newest first).  Entries with equal
// timestamps are returned in order of `LogEntry.insertId`.
@property(nonatomic, readwrite, copy, null_resettable) NSString *orderBy;

// Optional. The maximum number of results to return from this request.  Fewer
// results might be returned. You must check for the `nextPageToken` result to
// determine if additional results are available, which you can retrieve by
// passing the `nextPageToken` value in the `pageToken` parameter to the next
// request.
@property(nonatomic, readwrite) int32_t pageSize;

// Optional. If the `pageToken` request parameter is supplied, then the next
// page of results in the set are retrieved.  The `pageToken` parameter must
// be set with the value of the `nextPageToken` result parameter from the
// previous request.  The values of `projectIds`, `filter`, and `orderBy` must
// be the same as in the previous request.
@property(nonatomic, readwrite, copy, null_resettable) NSString *pageToken;

@end

#pragma mark - ListLogEntriesResponse

typedef GPB_ENUM(ListLogEntriesResponse_FieldNumber) {
  ListLogEntriesResponse_FieldNumber_EntriesArray = 1,
  ListLogEntriesResponse_FieldNumber_NextPageToken = 2,
};

// Result returned from `ListLogEntries`.
@interface ListLogEntriesResponse : GPBMessage

// A list of log entries.
// |entriesArray| contains |LogEntry|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *entriesArray;
@property(nonatomic, readonly) NSUInteger entriesArray_Count;

// If there are more results than were returned, then `nextPageToken` is
// given a value in the response.  To get the next batch of results, call
// this method again using the value of `nextPageToken` as `pageToken`.
@property(nonatomic, readwrite, copy, null_resettable) NSString *nextPageToken;

@end

#pragma mark - ListMonitoredResourceDescriptorsRequest

typedef GPB_ENUM(ListMonitoredResourceDescriptorsRequest_FieldNumber) {
  ListMonitoredResourceDescriptorsRequest_FieldNumber_PageSize = 1,
  ListMonitoredResourceDescriptorsRequest_FieldNumber_PageToken = 2,
};

// The parameters to ListMonitoredResourceDescriptors
@interface ListMonitoredResourceDescriptorsRequest : GPBMessage

// Optional. The maximum number of results to return from this request.  Fewer
// results might be returned. You must check for the `nextPageToken` result to
// determine if additional results are available, which you can retrieve by
// passing the `nextPageToken` value in the `pageToken` parameter to the next
// request.
@property(nonatomic, readwrite) int32_t pageSize;

// Optional. If the `pageToken` request parameter is supplied, then the next
// page of results in the set are retrieved.  The `pageToken` parameter must
// be set with the value of the `nextPageToken` result parameter from the
// previous request.
@property(nonatomic, readwrite, copy, null_resettable) NSString *pageToken;

@end

#pragma mark - ListMonitoredResourceDescriptorsResponse

typedef GPB_ENUM(ListMonitoredResourceDescriptorsResponse_FieldNumber) {
  ListMonitoredResourceDescriptorsResponse_FieldNumber_ResourceDescriptorsArray = 1,
  ListMonitoredResourceDescriptorsResponse_FieldNumber_NextPageToken = 2,
};

// Result returned from ListMonitoredResourceDescriptors.
@interface ListMonitoredResourceDescriptorsResponse : GPBMessage

// A list of resource descriptors.
// |resourceDescriptorsArray| contains |MonitoredResourceDescriptor|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *resourceDescriptorsArray;
@property(nonatomic, readonly) NSUInteger resourceDescriptorsArray_Count;

// If there are more results than were returned, then `nextPageToken` is
// returned in the response.  To get the next batch of results, call this
// method again using the value of `nextPageToken` as `pageToken`.
@property(nonatomic, readwrite, copy, null_resettable) NSString *nextPageToken;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

// @@protoc_insertion_point(global_scope)
