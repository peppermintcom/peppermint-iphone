// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/type/log_severity.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "google/logging/type/LogSeverity.pbobjc.h"
#import "google/api/Annotations.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - LogSeverityRoot

@implementation LogSeverityRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[AnnotationsRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - Enum LogSeverity

GPBEnumDescriptor *LogSeverity_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Default", .number = LogSeverity_Default },
      { .name = "Debug", .number = LogSeverity_Debug },
      { .name = "Info", .number = LogSeverity_Info },
      { .name = "Notice", .number = LogSeverity_Notice },
      { .name = "Warning", .number = LogSeverity_Warning },
      { .name = "Error", .number = LogSeverity_Error },
      { .name = "Critical", .number = LogSeverity_Critical },
      { .name = "Alert", .number = LogSeverity_Alert },
      { .name = "Emergency", .number = LogSeverity_Emergency },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(LogSeverity)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:LogSeverity_IsValidValue];
  }
  return descriptor;
}

BOOL LogSeverity_IsValidValue(int32_t value__) {
  switch (value__) {
    case LogSeverity_Default:
    case LogSeverity_Debug:
    case LogSeverity_Info:
    case LogSeverity_Notice:
    case LogSeverity_Warning:
    case LogSeverity_Error:
    case LogSeverity_Critical:
    case LogSeverity_Alert:
    case LogSeverity_Emergency:
      return YES;
    default:
      return NO;
  }
}


// @@protoc_insertion_point(global_scope)
